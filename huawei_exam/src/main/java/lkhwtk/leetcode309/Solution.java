package lkhwtk.leetcode309;

/**
 * 309. 最佳买卖股票时机含冷冻期
 * 题解参考：最佳买卖股票时机含冷冻期（官方）
 * 注意：本题中动态规划数组定义方式和122题相反，这里0代表持有股票
 */
public class Solution {
    public int maxProfit(int[] prices) {
        if (prices.length == 0) {
            return 0;
        }
        int n = prices.length;
        // f[i][0]: 截止到第i天，手上持有股票的最大收益
        // f[i][1]: 截止到第i天，手上不持有股票，并且在当天结束之后处于冷冻期中的累计最大收益，即：当天有卖出股票
        // f[i][2]: 截止到第i天，手上不持有股票，并且在当天结束后不在冷冻期中的累计最大收益，即：当天没有卖出股票，之前手上也没有股票
        int[][] f = new int[n][3];
        f[0][0] = -prices[0];
        for (int i = 1; i < n; ++i) {
            //第i天持有股票，当天肯定不是冷冻期，前一天没有卖出股票或者今天买入了股票，判断前一天持有股票和前一天不持有股票今天买入的最大收益
            f[i][0] = Math.max(f[i - 1][0], f[i - 1][2] - prices[i]);
            //手上不持有股票，并且当天结束后处于冷冻期，前一天一定不属于冷冻期，此时直接是前一天持有股票的最大收益加上当天卖出股票的收益
            f[i][1] = f[i - 1][0] + prices[i];
            //手上不持有股票，并且当天结束后不在冷冻期，当天就没有卖出股票，则说明第i-1天手上肯定没有股票
            f[i][2] = Math.max(f[i - 1][1], f[i - 1][2]);
        }
        //动态规划最后取不持有股票的最大收益
        return Math.max(f[n - 1][1], f[n - 1][2]);
    }
}
